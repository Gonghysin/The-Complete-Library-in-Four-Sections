name: Update README Directory

on:
  push:
    branches:
      - main # 如果您的主分支是 master，请修改为 master

jobs:
  update_readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write # 允许工作流提交更改
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Python script is now a separate file, so the inline creation step is removed.
      # Ensure .github/scripts/generate_toc.py is committed to your repository.

      - name: Generate directory structure
        id: generate_dir
        run: |
          # Create the directory for the script if it might not exist (though it should be committed)
          mkdir -p .github/scripts
          # Ensure the script is executable (optional, as we are calling it with python)
          # chmod +x .github/scripts/generate_toc.py 
          python .github/scripts/generate_toc.py dir_structure.md
          echo "Generated structure preview:"
          cat dir_structure.md
          # 将生成的内容传递给下一步
          GENERATED_CONTENT=$(cat dir_structure.md)
          echo "structure_content<<EOF" >> $GITHUB_OUTPUT
          echo "$GENERATED_CONTENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update README.md
        id: update_file
        run: |
          START_MARKER="<!-- AUTO_DIR_START -->"
          END_MARKER="<!-- AUTO_DIR_END -->"
          README_FILE="README.md"
          TEMP_README="README.md.tmp" # 临时文件
          DIR_STRUCTURE_CONTENT="${{ steps.generate_dir.outputs.structure_content }}"

          echo "$DIR_STRUCTURE_CONTENT" > .generated_dir_content.md

          awk -v start_marker="$START_MARKER" -v end_marker="$END_MARKER" -v structure_input_file=".generated_dir_content.md" '
            BEGIN { in_block = 0; printed_new_content = 0; }
            $0 ~ start_marker {
              print;
              while ((getline line < structure_input_file) > 0) {
                print line;
              }
              close(structure_input_file);
              in_block = 1; printed_new_content = 1;
              next;
            }
            $0 ~ end_marker {
              if (in_block) {
                print;
                in_block = 0;
                next;
              }
            }
            !in_block { print; }
            END {
              if (!printed_new_content && NR > 0) {
                # Potential warning if markers not found
              }
            }' "$README_FILE" > "$TEMP_README"

          rm .generated_dir_content.md

          if ! cmp -s "$README_FILE" "$TEMP_README"; then
            echo "README.md is being updated."
            mv "$TEMP_README" "$README_FILE"
            echo "changes_made=true" >> $GITHUB_OUTPUT
          else
            echo "No changes to README.md needed."
            rm "$TEMP_README"
            echo "changes_made=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.update_file.outputs.changes_made == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs: Auto-update README directory structure"
          file_pattern: README.md
          # Optional: custom committer info
          # commit_user_name: github-actions[bot]
          # commit_user_email: github-actions[bot]@users.noreply.github.com 